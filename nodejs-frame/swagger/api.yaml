openapi: 3.0.2
servers:
  - url: http://127.0.0.1:3000
info:
  description: This is API Doc for NodeJS Frame
  title: Swagger API Doc for NodeJS Frame
  version: 1.0.0

tags:
  - name: Posts
    description: Operations about Posts

paths:
  # Post Routes
  /api/posts:
    get:
      tags:
        - Posts
      summary: Get all posts
      description: This can only be done by the logged in user.
      responses:
        "200":
          description: Returns all Posts
    post:
      tags:
        - Posts
      summary: Create a new post
      requestBody:
        description: Create a new post
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "Post01"
                description:
                  type: string
                  example: "Description01"
          application/xml:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "Post01"
                description:
                  type: string
                  example: "Description01"
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "Post01"
                description:
                  type: string
                  example: "Description01"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                    example: "Post01"
                  description:
                    type: string
                    example: "Description01"
            application/xml:
              schema:
                type: object
                properties:
                  title:
                    type: string
                    example: "Post01"
                  description:
                    type: string
                    example: "Description01"
        "405":
          description: Invalid input

  /api/posts/{postId}:
    get:
      tags:
        - Posts
      summary: Find post by ID
      description: This can only be done by the logged in user.
      operationId: getPostById
      parameters:
        - name: postId
          in: path
          description: ID of post to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    example: "62fde243b554f4955fdf7914"
                  title:
                    type: string
                    example: "Title01"
                  description:
                    type: string
                    example: "Description01"
                  _v:
                    type: number
                    example: 0
                  createdAt:
                    type: string
                    format: date
                  updatedAt:
                    type: string
                    format: date
        "404":
          description: Post not found
    put:
      tags:
        - Posts
      summary: Update a post
      operationId: updatePostId
      parameters:
        - name: postId
          in: path
          description: ID of post to return
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existing post
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "Post01"
                description:
                  type: string
                  example: "Description01"
      responses:
        "200":
          description: Updated Successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    example: "62fde243b554f4955fdf7914"
                  title:
                    type: string
                    example: "Title Updated"
                  description:
                    type: string
                    example: "Description Updated"
                  status:
                    type: boolean
                    example: true
                  createdAt:
                    type: string
                    format: date
                  updatedAt:
                    type: string
                    format: date
        "405":
          description: Invalid input
    delete:
      tags:
        - Posts
      summary: Delete a post
      operationId: deletePost
      parameters:
        - name: postId
          in: path
          description: Post id to delete
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Deleted Successfully!
        "400":
          description: Invalid post value

  /api/posts/search:
    post:
      tags:
        - Posts
      summary: Get search posts
      requestBody:
        description: Title of the post that you want to search
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "Post"
      responses:
        "200":
          description: Returns search Posts
        "400":
          description: An error occured
